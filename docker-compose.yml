services:
  postgres-user:
    image: postgres:16
    container_name: user-data-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
      POSTGRES_DB: ${DB_DATABASE:-postgres}
    ports:
      - "${DB_PORT:-8081}:5432"
    volumes:
      - user-data-pgdata:/var/lib/postgresql/data
      - ./backend/schema.sql:/docker-entrypoint-initdb.d/init.sql

  postgres-rag:
    image: pgvector/pgvector:pg16
    container_name: rag-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: rag_db
    ports:
      - "5432:5432"
    volumes:
      - rag-pgdata:/var/lib/postgresql/data

  adminer:
    image: adminer
    container_name: adminer
    restart: unless-stopped
    ports:
      - "8080:8080"
    depends_on:
      - postgres-user
      - postgres-rag

  backend:
    build:
      context: ./backend
    container_name: backend
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://user:password@postgres-rag:5432/rag_db
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_DATABASE=postgres
      - DB_PORT=5432
      - DB_HOST=postgres-user
      - RAG_API_URL=http://rag_api:8082
      - RAG_EMBEDDER=${RAG_EMBEDDER:-gitee}
      - RAG_PROVIDER=${RAG_PROVIDER:-gemini}
    depends_on:
      - postgres-user
      - postgres-rag
    develop:
      watch:
        - action: sync
          path: ./backend
          target: /app
          ignore:
            - venv

  frontend:
    build:
      context: ./feedback
    container_name: frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    depends_on:
      - backend
    develop:
      watch:
        - action: sync
          path: ./feedback
          target: /app
          ignore:
            - node_modules

  rag_api:
    build:
      context: ./backend
      dockerfile: RAG/Dockerfile
    container_name: rag_api
    restart: unless-stopped
    ports:
      - "8082:8082"
    environment:
      - DATABASE_URL=postgresql://user:password@rag-postgres:5432/rag_db
    env_file:
      - ./backend/RAG/.env
    depends_on:
      - postgres-rag
    develop:
      watch:
        - action: sync
          path: ./backend/RAG
          target: /app
          ignore:
            - venv

volumes:
  user-data-pgdata:
  rag-pgdata:
