version: "3.8"

services:
  auth-backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      PORT: 8000
      DB_USER: "postgres"
      DB_PASSWORD: "postgres"
      DB_DATABASE: "feedback4u_db"
      DB_PORT: "5432"
      DB_HOST: "db"
    ports:
      - "8000:8000"
    depends_on:
      - db

  ai-backend:
    build:
      context: ./backend/RAG
      dockerfile: Dockerfile
    env_file:
      - ./backend/RAG/.env
    environment:
      PORT: 8082
      DB_TYPE: "postgres"
      DB_USER: "user"
      DB_PASSWORD: "password"
      DB_DATABASE: "ragdb"
      DB_PORT: "5432"
      DB_HOST: "postgres"
    ports:
      - "8082:8082"
    depends_on:
      - postgres

  db:
    image: postgres:latest
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_DB: "feedback4u_db"
    volumes:
      - auth_pgdata:/var/lib/postgresql/data
      - ./backend/schema.sql:/docker-entrypoint-initdb.d/01_schema.sql:ro
    ports:
      - "8081:5432"

  postgres:
    image: pgvector/pgvector:pg16
    container_name: rag-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: "user"
      POSTGRES_PASSWORD: "password"
      POSTGRES_DB: "ragdb"
    volumes:
      - rag_pgdata:/var/lib/postgresql/data
      - ./backend/RAG/schema.sql:/docker-entrypoint-initdb.d/01_schema.sql:ro
    ports:
      - "5432:5432"

  frontend:
    build:
      context: ./feedback
      dockerfile: Dockerfile
    restart: always
    environment:
      NEXT_PUBLIC_API_URL: "http://localhost:8000"
    volumes:
      - ./frontend/src:/app/src
      - /app/node_modules
      - /app/.next
    ports:
      - "3000:3000"
    depends_on:
      - auth-backend

volumes:
  auth_pgdata:
  rag_pgdata:
